/* SPDX-License-Identifier: GPL-2.0-only */

#ifndef __DRIVERS_GPIO_MT8189_H__
#define __DRIVERS_GPIO_MT8189_H__

#include <stdint.h>

enum {
	MAX_GPIO_REG_BITS = 32,
	MAX_EINT_REG_BITS = 32,
};

enum {
	GPIO_BASE = 0x10005000,
};

enum {
	PAD_GPIO0 = 0,
	PAD_GPIO1 = 1,
	PAD_GPIO2 = 2,
	PAD_GPIO3 = 3,
	PAD_GPIO4 = 4,
	PAD_GPIO5 = 5,
	PAD_GPIO6 = 6,
	PAD_GPIO7 = 7,
	PAD_GPIO8 = 8,
	PAD_GPIO9 = 9,
	PAD_GPIO10 = 10,
	PAD_GPIO11 = 11,
	PAD_GPIO12 = 12,
	PAD_GPIO13 = 13,
	PAD_GPIO14 = 14,
	PAD_GPIO15 = 15,
	PAD_GPIO16 = 16,
	PAD_GPIO17 = 17,
	PAD_CMMPDN0 = 18,
	PAD_CMMRST0 = 19,
	PAD_CMMPDN1 = 20,
	PAD_CMMRST1 = 21,
	PAD_CMMCLK0 = 22,
	PAD_CMMCLK1 = 23,
	PAD_CMMCLK2 = 24,
	PAD_DSI_LCM_RST = 25,
	PAD_DSI_DSI_TE = 26,
	PAD_DP_TX_HP = 27,
	PAD_EDP_TX_HPD = 28,
	PAD_DISP_PWM0 = 29,
	PAD_DISP_PWM1 = 30,
	PAD_UART0_TXD = 31,
	PAD_UART0_RXD = 32,
	PAD_UART1_TXD = 33,
	PAD_UART1_RXD = 34,
	PAD_UART2_TXD = 35,
	PAD_UART2_RXD = 36,
	PAD_UART3_TXD = 37,
	PAD_UART3_RXD = 38,
	PAD_JTMS = 39,
	PAD_JTCK = 40,
	PAD_JTDI = 41,
	PAD_JTDO = 42,
	PAD_JTRST = 43,
	PAD_KPCOL0 = 44,
	PAD_KPCOL1 = 45,
	PAD_KPROW0 = 46,
	PAD_KPROW1 = 47,
	PAD_PCIE_WAKE_N = 48,
	PAD_PCIE_PERESET_N = 49,
	PAD_PCIE_CLKREQ_N = 50,
	PAD_SCP_SCL0 = 51,
	PAD_SCP_SDA0 = 52,
	PAD_SCP_SCL1 = 53,
	PAD_SCP_SDA1 = 54,
	PAD_SCL2 = 55,
	PAD_SDA2 = 56,
	PAD_SCL3 = 57,
	PAD_SDA3 = 58,
	PAD_SCL4 = 59,
	PAD_SDA4 = 60,
	PAD_SCL5 = 61,
	PAD_SDA5 = 62,
	PAD_SCL6 = 63,
	PAD_SDA6 = 64,
	PAD_SCL7 = 65,
	PAD_SDA7 = 66,
	PAD_SCL8 = 67,
	PAD_SDA8 = 68,
	PAD_SPIM0_CSB = 69,
	PAD_SPIM0_CLK = 70,
	PAD_SPIM0_MOSI = 71,
	PAD_SPIM0_MISO = 72,
	PAD_SPIM1_CSB = 73,
	PAD_SPIM1_CLK = 74,
	PAD_SPIM1_MOSI = 75,
	PAD_SPIM1_MISO = 76,
	PAD_SPIM2_CSB = 77,
	PAD_SPIM2_CLK = 78,
	PAD_SPIM2_MOSI = 79,
	PAD_SPIM2_MISO = 80,
	PAD_USB0_IDDIG = 81,
	PAD_USB0_DRV_VBUS = 82,
	PAD_USB0_VBUS_VALID = 83,
	PAD_USB1_DRV_VBUS = 84,
	PAD_USB2_DRV_VBUS = 85,
	PAD_USB3_DRV_VBUS = 86,
	PAD_USB4_DRV_VBUS = 87,
	PAD_PWRAP_SPI_CSN = 88,
	PAD_PWRAP_SPI_CK = 89,
	PAD_PWRAP_SPI_MO = 90,
	PAD_PWRAP_SPI_MI = 91,
	PAD_PMIC_SRCLKENA0 = 92,
	PAD_PMIC_SRCLKENA1 = 93,
	PAD_SCP_VREQ_VAO = 94,
	PAD_PMIC_RTC32K_CK = 95,
	PAD_PMIC_WATCHDOG = 96,
	PAD_AUD_CLK_MOSI = 97,
	PAD_AUD_SYNC_MOSI = 98,
	PAD_AUD_DAT_MOSI0 = 99,
	PAD_AUD_DAT_MOSI1 = 100,
	PAD_AUD_DAT_MISO0 = 101,
	PAD_AUD_DAT_MISO1 = 102,
	PAD_I2SIN0_MCK = 103,
	PAD_I2SIN0_BCK = 104,
	PAD_I2SIN0_LRCK = 105,
	PAD_I2SIN0_DI = 106,
	PAD_I2SOUT0_MCK = 107,
	PAD_I2SOUT0_BCK = 108,
	PAD_I2SOUT0_LRCK = 109,
	PAD_I2SOUT0_DO = 110,
	PAD_DMIC0_CLK = 111,
	PAD_DMIC0_DAT0 = 112,
	PAD_DMIC1_CLK = 113,
	PAD_DMIC1_DAT0 = 114,
	PAD_PCM_CLK = 115,
	PAD_PCM_SYNC = 116,
	PAD_PCM_DI = 117,
	PAD_PCM_DO = 118,
	PAD_GBE_TXD3 = 119,
	PAD_GBE_TXD2 = 120,
	PAD_GBE_TXD1 = 121,
	PAD_GBE_TXD0 = 122,
	PAD_GBE_RXD3 = 123,
	PAD_GBE_RXD2 = 124,
	PAD_GBE_RXD1 = 125,
	PAD_GBE_RXD0 = 126,
	PAD_GBE_TXC = 127,
	PAD_GBE_RXC = 128,
	PAD_GBE_RXDV = 129,
	PAD_GBE_TXEN = 130,
	PAD_GBE_MDC = 131,
	PAD_GBE_MDIO = 132,
	PAD_GBE_TXER = 133,
	PAD_GBE_RXER = 134,
	PAD_GBE_COL = 135,
	PAD_GBE_INTR = 136,
	PAD_GBE_AUX_PPS0 = 137,
	PAD_GBE_AUX_PPS1 = 138,
	PAD_CONN_TOP_CLK = 139,
	PAD_CONN_TOP_DATA = 140,
	PAD_CONN_BT_CLK = 141,
	PAD_CONN_BT_DATA = 142,
	PAD_CONN_HRST_B = 143,
	PAD_CONN_WB_PTA = 144,
	PAD_CONN_WF_CTRL0 = 145,
	PAD_CONN_WF_CTRL1 = 146,
	PAD_CONN_WF_CTRL2 = 147,
	PAD_CONN_WF_CTRL3 = 148,
	PAD_CONN_WF_CTRL4 = 149,
	PAD_SPINOR_CK = 150,
	PAD_SPINOR_CS = 151,
	PAD_SPINOR_IO0 = 152,
	PAD_SPINOR_IO1 = 153,
	PAD_SPINOR_IO2 = 154,
	PAD_SPINOR_IO3 = 155,
	PAD_EMMC_DAT7 = 156,
	PAD_EMMC_DAT6 = 157,
	PAD_EMMC_DAT5 = 158,
	PAD_EMMC_DAT4 = 159,
	PAD_EMMC_RSTB = 160,
	PAD_EMMC_CMD = 161,
	PAD_EMMC_CLK = 162,
	PAD_EMMC_DAT3 = 163,
	PAD_EMMC_DAT2 = 164,
	PAD_EMMC_DAT1 = 165,
	PAD_EMMC_DAT0 = 166,
	PAD_EMMC_DSL = 167,
	PAD_MSDC1_CMD = 168,
	PAD_MSDC1_CLK = 169,
	PAD_MSDC1_DAT0 = 170,
	PAD_MSDC1_DAT1 = 171,
	PAD_MSDC1_DAT2 = 172,
	PAD_MSDC1_DAT3 = 173,
	PAD_MSDC2_CMD = 174,
	PAD_MSDC2_CLK = 175,
	PAD_MSDC2_DAT0 = 176,
	PAD_MSDC2_DAT1 = 177,
	PAD_MSDC2_DAT2 = 178,
	PAD_MSDC2_DAT3 = 179,
	PAD_SPMI_P_SCL = 180,
	PAD_SPMI_P_SDA = 181,
	PAD_EMI_RESETB = 182,
	GPIO_NUM,
};

typedef struct {
	GpioValRegs dir[9];
	uint8_t rsv00[112];
	GpioValRegs dout[9];
	uint8_t rsv01[112];
	GpioValRegs din[9];
	uint8_t rsv02[112];
	GpioValRegs mode[34];
} GpioRegs;

typedef struct {
	uint32_t sta[16];
	uint32_t ack[16];
} EintRegs;

#endif /* __DRIVERS_GPIO_MT8189_H__ */
